<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-07T16:43:09 IST" name="Suite" finished-at="2024-08-07T16:43:53 IST" duration-ms="43967">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValidation()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" name="loginErrorValidation" class="AutomationWIthJava.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
      <group name="purchase">
        <method signature="StandAloneTest.submitOrderTest(java.util.HashMap)[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" name="submitOrderTest" class="AutomationWIthJava.StandAloneTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2024-08-07T16:43:09 IST" name="ErrorValidationTest" finished-at="2024-08-07T16:43:41 IST" duration-ms="32538">
      <class name="AutomationWIthJava.ErrorValidationTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:09 IST" name="lunchApplication" finished-at="2024-08-07T16:43:17 IST" duration-ms="8407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:17 IST" name="loginErrorValidation" finished-at="2024-08-07T16:43:18 IST" duration-ms="734" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at AutomationWIthJava.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:18 IST" name="tearDown" finished-at="2024-08-07T16:43:18 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:18 IST" name="lunchApplication" finished-at="2024-08-07T16:43:24 IST" duration-ms="6202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:24 IST" name="loginErrorValidation" finished-at="2024-08-07T16:43:26 IST" duration-ms="1104" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at AutomationWIthJava.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:26 IST" name="tearDown" finished-at="2024-08-07T16:43:26 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:26 IST" name="lunchApplication" finished-at="2024-08-07T16:43:32 IST" duration-ms="5710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:32 IST" name="productErrorValidation" finished-at="2024-08-07T16:43:41 IST" duration-ms="9360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.ErrorValidationTest@77659b30]" started-at="2024-08-07T16:43:41 IST" name="tearDown" finished-at="2024-08-07T16:43:41 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AutomationWIthJava.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2024-08-07T16:43:09 IST" name="submitOrder" finished-at="2024-08-07T16:43:53 IST" duration-ms="43967">
      <class name="AutomationWIthJava.StandAloneTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:09 IST" name="lunchApplication" finished-at="2024-08-07T16:43:17 IST" duration-ms="7543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrderTest(java.util.HashMap)[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:17 IST" name="submitOrderTest" data-provider="getJsonData" finished-at="2024-08-07T16:43:28 IST" duration-ms="11468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Saibaba123#, email=learnJava@gmail.com, prductName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:28 IST" name="tearDown" finished-at="2024-08-07T16:43:28 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:28 IST" name="lunchApplication" finished-at="2024-08-07T16:43:35 IST" duration-ms="6416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrderTest(java.util.HashMap)[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:35 IST" name="submitOrderTest" data-provider="getJsonData" finished-at="2024-08-07T16:43:46 IST" duration-ms="10820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Saibaba123#, email=9966@gmail.com, prductName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:46 IST" name="tearDown" finished-at="2024-08-07T16:43:46 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:46 IST" name="lunchApplication" finished-at="2024-08-07T16:43:52 IST" duration-ms="6164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderConfirmation()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:52 IST" name="orderConfirmation" finished-at="2024-08-07T16:43:53 IST" depends-on-methods="AutomationWIthJava.StandAloneTest.submitOrderTest" duration-ms="867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderConfirmation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AutomationWIthJava.StandAloneTest@37313c65]" started-at="2024-08-07T16:43:53 IST" name="tearDown" finished-at="2024-08-07T16:43:53 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AutomationWIthJava.StandAloneTest -->
    </test> <!-- submitOrder -->
  </suite> <!-- Suite -->
</testng-results>
